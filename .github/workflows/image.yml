name: Build
on:
  pull_request:
  push:
    branches: [ortege]
    tags:
      - '**'

concurrency:
  group: build-push-notebook-${{ github.ref }}
  cancel-in-progress: true

jobs:
  distribution:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-action]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.CR_ENDPOINT }}
          username: ${{ secrets.CR_USERNAME }}
          password: ${{ secrets.CR_PASSWORD }}

      - name: Build distribution image
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: zeppelin-distribution:latest
          outputs: type=docker,dest=/tmp/distribution.tar
          cache-from: |
            type=registry,ref=${{ secrets.CR_ENDPOINT }}/ortege/notebooks-distribution:buildcache
            type=registry,ref=${{ secrets.CR_ENDPOINT }}/ortege/notebooks:ortege
          cache-to: type=registry,ref=${{ secrets.CR_ENDPOINT }}/ortege/notebooks-distribution:buildcache,mode=max

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: distribution
          path: /tmp/distribution.tar
          retention-days: 1

  server:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-action]')"
    runs-on: ubuntu-latest
    needs: distribution
    steps:
      - uses: actions/checkout@v3

      - name: Generate tag data
        id: taggen
        run: |
          echo "TAG_DATE=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
          echo "TAG_SHA=$(echo '${{ github.sha }}' | cut -b 1-7)" >> $GITHUB_OUTPUT

      - name: Generate image tag
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.CR_ENDPOINT }}/ortege/notebooks-server
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=${{ steps.taggen.outputs.TAG_SHA }}-${{ steps.taggen.outputs.TAG_DATE }}

      # # NOTE(joseb): we cannot use local images as base image for image build with docker-container driver
      # #              until this https://github.com/moby/buildkit/issues/2343 is fixed.
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      - name: Log into registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.CR_ENDPOINT }}
          username: ${{ secrets.CR_USERNAME }}
          password: ${{ secrets.CR_PASSWORD }}

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: distribution
          path: /tmp

      - name: Load distribution image
        run: |
          docker load --input /tmp/distribution.tar
          docker image ls -a

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: scripts/docker/zeppelin/bin/
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # # NOTE(joseb): we cannot use cache without buildx
          # cache-from: type=registry,ref=${{ secrets.CR_ENDPOINT }}/ortege/notebooks-server:buildcache
          # cache-to: type=registry,ref=${{ secrets.CR_ENDPOINT }}/ortege/notebooks-server:buildcache,mode=max


  interpreter:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-action]')"
    runs-on: ubuntu-latest
    needs: distribution
    steps:
      - uses: actions/checkout@v3

      - name: Generate tag data
        id: taggen
        run: |
          echo "TAG_DATE=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
          echo "TAG_SHA=$(echo '${{ github.sha }}' | cut -b 1-7)" >> $GITHUB_OUTPUT

      - name: Generate image tag
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.CR_ENDPOINT }}/ortege/notebooks-interpreter
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=${{ steps.taggen.outputs.TAG_SHA }}-${{ steps.taggen.outputs.TAG_DATE }}

      # # NOTE(joseb): we cannot use local images as base image for image build with docker-container driver
      # #              until this https://github.com/moby/buildkit/issues/2343 is fixed.
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      - name: Log into registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.CR_ENDPOINT }}
          username: ${{ secrets.CR_USERNAME }}
          password: ${{ secrets.CR_PASSWORD }}

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: distribution
          path: /tmp
      - name: Load distribution image
        run: |
          docker load --input /tmp/distribution.tar
          docker image ls -a

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: scripts/docker/zeppelin-interpreter/
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # # NOTE(joseb): we cannot use cache without buildx
          # cache-from: type=registry,ref=${{ secrets.CR_ENDPOINT }}/ortege/notebooks-interpreter:buildcache
          # cache-to: type=registry,ref=${{ secrets.CR_ENDPOINT }}/ortege/notebooks-interpreter:buildcache,mode=max
